
=> Make 4 Projects

- Core : Models and Interfaces
- Infrastructure : Repository and Ef Interaction Code
- Tests Project
- Web Project



=> CORE Project 

- Make all the Classes
- Make a Folder named interfaces
- Create Interfaces for Models in that folder

=> Infrastructure Project

- Install Entity Framework
- Create Context Class
- Set App.config Connection String
- Make a Seed Class 
- Inherit it from DropCreateDatabaseIfModelChanges Class
- Make Repository class that inherits from Core Interfaces
- Enable mgrations and Update DB


=> Test Project

- Develope Tests
- Check results with one generated Model


=> MVC Project

- Create Controllers and Views as usual
- Use Models and Repositories from Core and Infrastructure Projects
- Controllers have to instantiate Context Class in action methods that is not good for independent modules
- Scaffolding will have DBContext , But we want repository classes and their methods , use those 
- Now we have Repos Being used but we dont want their object we want interfaces
- Install Unity.mvc Dependency injection Nuget Package
- 




